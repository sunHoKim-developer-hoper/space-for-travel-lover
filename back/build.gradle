plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sunho'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile) {
    options.compilerArgs += '-parameters'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	//내부적으로 spring-boot-starter-jdbc, spring-data-jpa, hibernate-core를 포함한다. spring-boot-starter-data-jpa → spring-boot-starter-jdbc → DataSourceAutoConfiguration 순으로 동작하여 DataSource Bean을 생성한다.
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' 
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2:2.2.224'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리용
	//redis관련
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
	//WebClient 사용 용도
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//dotenv사용 용도
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'

	//h2 DB에서 maria DB로 전환하기 위한 용도
	//runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.4'

	//서비스 간 통신 정책이나 트래픽 제어가 필요한 대규모 마이크로서비스 환경, 왜 들어간지는 모르겠지만..
	//implementation 'com.vmware.tanzu.spring.governance:governance-starter:1.3.1'
}


tasks.named('test') {
	useJUnitPlatform()
}


